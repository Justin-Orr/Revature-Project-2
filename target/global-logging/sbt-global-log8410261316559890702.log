[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\YANJIN~1\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\YANJIN~1\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Amazon.com Inc. Java 1.8.0_302)
[debug]       Load.loadUnit: plugins took 160.6811ms
[debug]       Load.loadUnit: defsScala took 0.5323ms
[debug] [Loading] Scanning directory C:\Users\Yan Jin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Yan Jin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.1048 ms
[debug]           Load.resolveProject(global-plugins) took 86.8755ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Yan Jin\.sbt\1.0\plugins, plugins: List(<none>))) took 154.562ms
[debug] [Loading] Done in C:\Users\Yan Jin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 195.6851ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4834ms
[debug]     Load.loadUnit(file:/C:/Users/Yan%20Jin/.sbt/1.0/plugins/, ...) took 371.2913ms
[debug]   Load.apply: load took 712.0995ms
[debug]   Load.apply: resolveProjects took 12.7147ms
[debug]   Load.apply: finalTransforms took 83.29ms
[debug]   Load.apply: config.delegates took 10.2524ms
[debug]   Load.apply: Def.make(settings)... took 578.5587ms
[debug]   Load.apply: structureIndex took 130.0296ms
[debug]   Load.apply: mkStreams took 2.4921ms
[info] loading global plugins from C:\Users\Yan Jin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4748.1471ms
[debug]           Load.loadUnit: plugins took 41.4165ms
[debug]           Load.loadUnit: defsScala took 0.0074ms
[debug] [Loading] Scanning directory C:\Revature-Project-2\project
[debug]             Load.loadUnit: mkEval took 13.561ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Revature-Project-2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.6763 ms
[info] loading settings for project revature-project-2-build from idea1.sbt ...
[debug]               Load.resolveProject(revature-project-2-build) took 3.4398ms
[debug]             Load.loadTransitive: finalizeProject(Project(id revature-project-2-build, base: C:\Revature-Project-2\project, plugins: List(<none>))) took 7.9697ms
[debug] [Loading] Done in C:\Revature-Project-2\project, returning: (revature-project-2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3420.147ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.1512ms
[debug]         Load.loadUnit(file:/C:/Revature-Project-2/project/, ...) took 3468.0826ms
[debug]       Load.apply: load took 3470.0205ms
[debug]       Load.apply: resolveProjects took 0.1542ms
[debug]       Load.apply: finalTransforms took 11.5055ms
[debug]       Load.apply: config.delegates took 0.4648ms
[debug]       Load.apply: Def.make(settings)... took 90.5421ms
[debug]       Load.apply: structureIndex took 37.2548ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Revature-Project-2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6764.6954ms
[debug]     Load.loadUnit: defsScala took 0.0084ms
[debug] [Loading] Scanning directory C:\Revature-Project-2
[debug]       Load.loadUnit: mkEval took 0.3763ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Revature-Project-2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 7.1816 ms
[info] loading settings for project revature-project-2 from build.sbt ...
[debug]         Load.resolveProject(revature-project-2) took 230.6636ms
[debug]       Load.loadTransitive: finalizeProject(Project(id revature-project-2, base: C:\Revature-Project-2, plugins: List(<none>))) took 240.6457ms
[debug] [Loading] Done in C:\Revature-Project-2, returning: (revature-project-2)
[debug]     Load.loadUnit: loadedProjectsRaw took 4984.3779ms
[debug]     Load.loadUnit: cleanEvalClasses took 33.1112ms
[debug]   Load.loadUnit(file:/C:/Revature-Project-2/, ...) took 11783.1653ms
[debug] Load.apply: load took 11785.4112ms
[debug] Load.apply: resolveProjects took 0.1946ms
[debug] Load.apply: finalTransforms took 45.0779ms
[debug] Load.apply: config.delegates took 0.7529ms
[debug] Load.apply: Def.make(settings)... took 171.7814ms
[debug] Load.apply: structureIndex took 25.8991ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to Revature-Project-2 (in build file:/C:/Revature-Project-2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49444 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49444, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Revature-Project-2 (in build file:/C:/Revature-Project-2/)
[debug] > Exec(idea-shell, None, None)
